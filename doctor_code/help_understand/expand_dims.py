"""
main文件中np.expand_dims(mean_x, axis=0)

"""
import numpy as np

a = [1, 2, 3,11] ; b = [4, 5, 6,20]
c = [7, 8, 999,77]
w1 = np.array([a,b,c])

print("w1输出为:")
print(w1)
print("\n")

b = np.expand_dims(w1, axis=0)

print("看第1个输出结果。。。。")
print(b)
print("b的第一个结果shape",b.shape)
print("\n")



print("隔开。。。。。。。。。。。。。。。。")

c = np.expand_dims(w1, axis=1)
print("看第2个输出结果。。。。")
print(c)

print("\n")
print("***********这个特殊的*******************")

d = np.expand_dims(w1[-1], axis=0)  # 在mpc_controller里的第74行,最后1行1维数组变成2维数组，[,,,]——[[,,,,]]
temp = np.tile(d, (10,1))  ######

e = np.expand_dims(w1[-1], axis=1)


print("d为：",d)
print("temp:",temp)
"""
temp
[[  7   8 999  77]
 [  7   8 999  77]
 [  7   8 999  77]
 [  7   8 999  77]
 [  7   8 999  77]
 [  7   8 999  77]
 [  7   8 999  77]
 [  7   8 999  77]
 [  7   8 999  77]
 [  7   8 999  77]]

"""

print("e为：",e)

# 输出结果:
"""

w1输出为:
[[  1   2   3  11]
 [  4   5   6  20]
 [  7   8 999  77]]


看第1个输出结果。。。。
[[[  1   2   3  11]
  [  4   5   6  20]
  [  7   8 999  77]]]


隔开。。。。。。。。。。。。。。。。
看第2个输出结果。。。。
[[[  1   2   3  11]]

 [[  4   5   6  20]]

 [[  7   8 999  77]]]

分析：第一种情况axis=0是将整体2维数组变成了3维数组
     第2种情况axis=1是将原来的2维数组里的每一个数据变成了2个维度，整体是3维数组
     

***********这个特殊的*******************
d为： [[  7   8 999  77]]
e为： [[  7]
      [  8]
      [999]
      [ 77]]
"""

